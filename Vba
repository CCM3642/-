Sub BranchLevelInventoryReport()
    Dim wsInv As Worksheet
    Dim wsBranch As Worksheet
    Dim lastRow As Long, reportRow As Long
    Dim i As Long, j As Long
    Dim branch As String, key As String
    Dim currStock As Double, minStock As Double
    Dim dict As Object, arr() As Variant, temp1 As Variant, temp2 As Variant
    Dim swapped As Boolean
    
    ' Inventory data sheet
    Set wsInv = ThisWorkbook.Sheets("Inventory Data")
    lastRow = wsInv.Cells(wsInv.Rows.Count, "A").End(xlUp).Row
    
    ' Branch list
    Dim branches As Variant
    branches = Array("Hamdan", "Khalidia", "Mourro", "Shabia 11", "Satwa", "Barsha", "Electra")
    
    ' Dictionary to store qty sold per branch-item
    Set dict = CreateObject("Scripting.Dictionary")
    
    ' Collect total sold per branch-item
    For i = 2 To lastRow
        branch = wsInv.Cells(i, 7).Value
        key = branch & "|" & wsInv.Cells(i, 1).Value
        If dict.exists(key) Then
            dict(key) = dict(key) + wsInv.Cells(i, 4).Value
        Else
            dict.Add key, wsInv.Cells(i, 4).Value
        End If
    Next i
    
    ' Loop through branches
    For Each branch In branches
        ' Delete existing branch sheet if exists
        On Error Resume Next
        Application.DisplayAlerts = False
        ThisWorkbook.Sheets(branch).Delete
        Application.DisplayAlerts = True
        On Error GoTo 0
        
        ' Create new branch sheet
        Set wsBranch = ThisWorkbook.Sheets.Add
        wsBranch.Name = branch
        
        ' Header
        wsBranch.Range("A1:G1").Value = Array("Item", "Family Group", "Qty Sold", "Current Stock", "Minimum Stock", "Status", "Top 5 Selling")
        reportRow = 2
        
        ' Loop inventory for this branch
        For i = 2 To lastRow
            If wsInv.Cells(i, 7).Value = branch Then
                wsBranch.Cells(reportRow, 1).Value = wsInv.Cells(i, 1).Value
                wsBranch.Cells(reportRow, 2).Value = wsInv.Cells(i, 2).Value
                wsBranch.Cells(reportRow, 3).Value = wsInv.Cells(i, 4).Value
                
                currStock = wsInv.Cells(i, 3).Value - wsInv.Cells(i, 4).Value
                minStock = wsInv.Cells(i, 6).Value
                
                wsBranch.Cells(reportRow, 4).Value = currStock
                wsBranch.Cells(reportRow, 5).Value = minStock
                
                If currStock < minStock Then
                    wsBranch.Cells(reportRow, 6).Value = "SHORT"
                    wsBranch.Rows(reportRow).Interior.Color = RGB(255, 199, 206)
                Else
                    wsBranch.Cells(reportRow, 6).Value = "OK"
                End If
                
                reportRow = reportRow + 1
            End If
        Next i
        
        ' Collect top-selling items
        Dim topArr() As Variant, topRow As Long
        topRow = 0
        ReDim topArr(1 To dict.Count, 1 To 2)
        For Each key In dict.keys
            If Split(key, "|")(0) = branch Then
                topRow = topRow + 1
                topArr(topRow, 1) = Split(key, "|")(1)
                topArr(topRow, 2) = dict(key)
            End If
        Next key
        ReDim Preserve topArr(1 To topRow, 1 To 2)
        
        ' Sort top-selling descending
        Do
            swapped = False
            For j = 1 To topRow - 1
                If topArr(j, 2) < topArr(j + 1, 2) Then
                    temp1 = topArr(j, 1): temp2 = topArr(j, 2)
                    topArr(j, 1) = topArr(j + 1, 1): topArr(j, 2) = topArr(j + 1, 2)
                    topArr(j + 1, 1) = temp1: topArr(j + 1, 2) = temp2
                    swapped = True
                End If
            Next j
        Loop While swapped
        
        ' Mark Top 5 Selling
        For i = 2 To wsBranch.Cells(wsBranch.Rows.Count, 1).End(xlUp).Row
            For j = 1 To WorksheetFunction.Min(5, topRow)
                If wsBranch.Cells(i, 1).Value = topArr(j, 1) Then
                    wsBranch.Cells(i, 7).Value = "Top " & j
                    Exit For
                End If
            Next j
        Next i
        
        wsBranch.Columns("A:G").AutoFit
        wsBranch.Rows(1).Font.Bold = True
    Next branch
    
    MsgBox "Branch-level reports created successfully!", vbInformation
End Sub
